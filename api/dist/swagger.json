{
    "swagger": "2.0",
    "info": {
        "title": "emojiApp",
        "version": "0.0.1"
    },
    "host": "3.18.139.243:5001",
    "basePath": "/emojiApp/v2/api",
    "consumes": [
        "application/x-www-form-urlencoded",
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "schemes": [
        "http"
    ],
    "tags": [
        {
            "name": "user",
            "description": "user api"
        },
        {
            "name": "admin",
            "description": "admin api"
        }
    ],
    "paths": {
        "/user/login": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Authenticating user(Login Request)",
                "description": "Either emailid or number need to be provided.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "emailId",
                        "in": "formData",
                        "description": "Email id of user",
                        "type": "string"
                    },
                    {
                        "name": "contactNumber",
                        "in": "formData",
                        "description": "phone number of user",
                        "type": "string"
                    },
                    {
                        "name": "isdCode",
                        "in": "formData",
                        "description": "isd code  of user country",
                        "type": "string"
			},
		    {
                        "name": "password",
                        "in": "formData",
                        "description": "password for the account,This field is required for admin login only,ignore if login for user account.",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login Successfull",
                        "schema": {
                            "$ref": "#/definitions/login"
                        }
                    },
                    "400": {
                        "description": "User not found.",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "401": {
                        "description": "Incorrect password",
                        "schema": {
                            "$ref": "#/definitions/PassNotMatch"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "New users registration request",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userName",
                        "in": "formData",
                        "description": "User name of the user.It needs to be unique for every user",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "fullName",
                        "in": "formData",
                        "description": "User full name.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "emailId",
                        "in": "formData",
                        "description": "Email id of user.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "contactNumber",
                        "in": "formData",
                        "description": "phone number of user.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "isdCode",
                        "in": "formData",
                        "description": "isd code  of user country.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "deviceType",
                        "in": "formData",
                        "description": "The type of device user is using.",
                        "type": "string",
                        "enum": [
                            "IOS",
                            "ANDROID"
                        ],
                        "required": true
                    },
                    {
                        "name": "deviceId",
                        "in": "formData",
                        "description": "User device id.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "fcmToken",
                        "in": "formData",
                        "description": "Fcm token.",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Registered sucessfully",
                        "schema": {
                            "$ref": "#/definitions/UserExist"
                        }
                    },
                    "400": {
                        "description": "Please provide all the required fields.",
                        "schema": {
                            "$ref": "#/definitions/UserExist"
                        }
                    }
                }
            }
        },
        "/user/checkEmailExist": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Api should check if the email exist in database and respond accordingly.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "emailId",
                        "in": "formData",
                        "description": "Email id of user to check if it already been used or not.",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Emailid Exist",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "400": {
                        "description": "User not exist.",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/user/checkNumberExist": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Api should check if the contactNumber exist in database and respond accordingly.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "contactNumber",
                        "in": "formData",
                        "description": "phone number of user.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "isdCode",
                        "in": "formData",
                        "description": "isd code  of user country.",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "contactNumber Exist",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "400": {
                        "description": "User not exist.",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/user/socialLogin": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Authenticating user from facebook",
                "parameters": [
                    {
                        "in": "body",
                        "name": "user",
                        "description": "Login using social.",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "socialId",
                                "fullName",
                                "userName",
                                "loginType",
                                "deviceType",
                                "deviceToken"
                            ],
                            "properties": {
                                "socialId": {
                                    "type": "string"
                                },
                                "fullName": {
                                    "type": "string"
                                },
                                "userName": {
                                    "type": "string"
                                },
                                "loginType": {
                                    "type": "string",
                                    "enum": [
                                        "noramal",
                                        "social"
                                    ]
                                },
                                "deviceType": {
                                    "type": "string",
                                    "enum": [
                                        "IOS",
                                        "ANDROID"
                                    ]
                                },
                                "deviceToken": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucessfully register.",
                        "schema": {
                            "$ref": "#/definitions/fbMap"
                        }
                    },
                    "201": {
                        "description": "Login Successfull",
                        "schema": {
                            "$ref": "#/definitions/UserExist"
                        }
                    }
                }
            }
        },
        "/user/syncContacts": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Sync req.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "user",
                        "description": "syncContacts  api.",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "contacts"
                            ],
                            "properties": {
                                "contacts": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "contactNumber": {
                                                "type": "string"
                                            },
                                            "userName": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "400": {
                        "description": "User not exist.",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/user/forgotPassword": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Sending new password to user on registered emailid.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "user",
                        "description": "Forgot password api.",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "emailId"
                            ],
                            "properties": {
                                "emailId": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "400": {
                        "description": "User not exist.",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/user/changePassword/{id}": {
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Change password request",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of particular user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "oldPassword",
                                "newPassword"
                            ],
                            "properties": {
                                "oldPassword": {
                                    "type": "string"
                                },
                                "newPassword": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password reset sucessfullly",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "400": {
                        "description": "Old password didn't match.",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "404": {
                        "description": "User not found.",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/user/verifyAccount/{id}": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Verify account request",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of particular user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "pin"
                            ],
                            "properties": {
                                "pin": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PIN verified sucessfully",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "400": {
                        "description": "Invalid pin",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/user/resendPin/{id}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "resendPin number request",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of particular user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pin sent Sucessfully",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "400": {
                        "description": "Invalid user",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/user/editProfile/{id}": {
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Edit profile request",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of particular user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userName",
                        "in": "formData",
                        "description": "userName of the user.",
                        "type": "string"
                    },
                    {
                        "name": "fullName",
                        "in": "formData",
                        "description": "fullName of the user.",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesfully edited",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "400": {
                        "description": "Invalid user",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/user/imageUpload/{id}": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "uploads an image",
                "description": "",
                "operationId": "uploadFile",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "img",
                        "in": "formData",
                        "description": "file to upload",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of particular user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucess",
                        "schema": {
                            "$ref": "#/definitions/imageUpload"
                        }
                    },
                    "400": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/user/groupIconUpload": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "uploads an image",
                "description": "",
                "operationId": "uploadGroupImage",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "img",
                        "in": "formData",
                        "description": "file to upload",
                        "required": false,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucess",
                        "schema": {
                            "$ref": "#/definitions/imageUpload"
                        }
                    },
                    "400": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/user/getCMSPage": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get CMS Data",
                "description": "",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "page_title",
                        "in": "query",
                        "description": "Get the cms data from: 'privacy_policy', 'terms_conditions', 'about_us'",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucess",
                        "schema": {
                            "$ref": "#/definitions/imageUpload"
                        }
                    },
                    "400": {
                        "description": "page not found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "404": {
                        "description": "No data found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/user/addcontactUs/{id}": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "add contactUs pages request",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular admin",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of particular user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "subject",
                        "in": "formData",
                        "description": "subject for contactUs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "message",
                        "in": "formData",
                        "description": "message for contactUs",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully Added",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "400": {
                        "description": "Invalid user",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/user/purchaseKeyboard/{id}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "purchase keyboard api",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of particular user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "keyboardName",
                        "description": "Id of particular keyboard",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucess",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "data not found.",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/user/getImages/{id}/{id1}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get images of keyboard(subCategory)",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of particular category",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id1",
                        "description": "Id of particular keyboard",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucess",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "data not found.",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/user/fetchKeyboardSubImages/{id}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "get subimages of keyboard api",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of particular keyboard",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucess",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "data not found.",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/admin/getAllUser": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Get list of all users",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "number of pages",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "description": "size of page",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "description": "request for filtering data",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucess",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "No records.",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/admin/recordCount": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Get count of  users",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucess",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "400": {
                        "description": "No records.",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/admin/getOneUser/{id}": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Get data of particular user",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of particular user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucess",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "User not found.",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/admin/getOneKeyboardDetails/{id}": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Get data of particular keyboard",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular admin",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of particular keyboard",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucess",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "User not found.",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/admin/getOneCategoryData/{id}": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Get data of particular category",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular admin",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of particular category",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucess",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "User not found.",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/admin/getActiveCatList": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Get data of Active category only",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular admin",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucess",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "User not found.",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/admin/updateUser/{id}": {
            "put": {
                "tags": [
                    "admin"
                ],
                "summary": "Edit user profile request",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of particular user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "userName": {
                                    "type": "string"
                                },
                                "fullName": {
                                    "type": "string"
                                },
                                "contactNumber": {
                                    "type": "string"
                                },
                                "emailId": {
                                    "type": "string"
                                },
                                "image": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesfully edited",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "400": {
                        "description": "Invalid user",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/admin/deleteUser/{id}": {
            "put": {
                "tags": [
                    "admin"
                ],
                "summary": "Delete user profile request",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of particular user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "400": {
                        "description": "Invalid user",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/admin/activeUser/{id}": {
            "put": {
                "tags": [
                    "admin"
                ],
                "summary": "Request for activate user",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of particular keyboard",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activated Successfully",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "400": {
                        "description": "Invalid keyboard",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/admin/activeKeyboard/{id}": {
            "put": {
                "tags": [
                    "admin"
                ],
                "summary": "Request for activeKeyboard",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular admin",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of particular admin",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Keyboard Activated Successfully",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "400": {
                        "description": "Invalid user",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/admin/activeCategory/{id}": {
            "put": {
                "tags": [
                    "admin"
                ],
                "summary": "Request for activeCategory",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular admin",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of particular admin",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activated Successfully",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "400": {
                        "description": "Invalid user",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/admin/addAboutusPage/{id}": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "add cms pages request",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular admin",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of particular admin",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "add description of about us page.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully Added",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "400": {
                        "description": "Invalid user",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/admin/addprivacy_policy/{id}": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "add privacy_policy request",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular admin",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of particular admin",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "add description of about us page.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully Added",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "400": {
                        "description": "Invalid user",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/admin/add_terms_conditions/{id}": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "add terms_conditions pages request",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular admin",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of particular admin",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "add description of about us page.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully Added",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "400": {
                        "description": "Invalid user",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/admin/addKeyboard/{id}": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "add cms pages request",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular admin",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of particular admin",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "admin",
                        "description": "add about us page.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "keyboardName": {
                                    "type": "string"
                                },
                                "categoryName": {
                                    "type": "string"
                                },
                                "KeyboardType": {
                                    "type": "string"
                                },
                                "cost": {
                                    "type": "number"
                                },
                                "status": {
                                    "type": "number"
                                },
                                "createdBy": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully Added",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "400": {
                        "description": "Invalid user",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/admin/addCategory/{id}": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "addCategory request",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular admin",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of particular admin",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "admin",
                        "description": "add about us page.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "categoryName": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Added Sucessfully",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "400": {
                        "description": "Invalid user",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/admin/updateAboutusPage/{id}": {
            "put": {
                "tags": [
                    "admin"
                ],
                "summary": "Edit AboutusPage request",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular admin",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of particular cms page",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesfully edited",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "400": {
                        "description": "Invalid user",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/admin/updateprivacy_policy/{id}": {
            "put": {
                "tags": [
                    "admin"
                ],
                "summary": "Edit privacy_policy request",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular admin",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of particular cms page",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesfully edited",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "400": {
                        "description": "Invalid user",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/admin/update_terms_conditions/{id}": {
            "put": {
                "tags": [
                    "admin"
                ],
                "summary": "Edit terms_conditions request",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular admin",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of particular cms page",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesfully edited",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "400": {
                        "description": "Invalid user",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/admin/updateCategory/{id}": {
            "put": {
                "tags": [
                    "admin"
                ],
                "summary": "Edit category Details request",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular admin",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of particular added category",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "categoryName": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesfully edited",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "400": {
                        "description": "Invalid user",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/admin/deleteKeyboard/{id}": {
            "put": {
                "tags": [
                    "admin"
                ],
                "summary": "deleteKeyboard request",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of keyboard",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "400": {
                        "description": "Invalid keyboard",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/admin/deleteCategory/{id}": {
            "put": {
                "tags": [
                    "admin"
                ],
                "summary": "deleteCategory request",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular admin",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of category",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "400": {
                        "description": "Invalid category",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/admin/updateKeyboardDetails/{id}": {
            "put": {
                "tags": [
                    "admin"
                ],
                "summary": "Edit request for update keyboard",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular keyboard",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of particular keyboard",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "keyboardName": {
                                    "type": "string"
                                },
                                "categoryName": {
                                    "type": "string"
                                },
                                "KeyboardType": {
                                    "type": "string"
                                },
                                "cost": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesfully edited",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "400": {
                        "description": "Invalid keyboard",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/admin/getcmsPage": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Get CMS Data",
                "description": "",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page_title",
                        "in": "query",
                        "description": "Get the cms data from: 'privacy_policy', 'terms_conditions', 'about_us'",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucess",
                        "schema": {
                            "$ref": "#/definitions/imageUpload"
                        }
                    },
                    "400": {
                        "description": "page not found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    },
                    "404": {
                        "description": "No data found",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/admin/getAllKeyboardDetails": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Get list of all Keyboard",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "number of pages",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "description": "size of page",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "description": "request for filtering data",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucess",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "No records.",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        },
        "/admin/getAllCategory": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Get list of all Category",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token of particular admin",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "number of pages",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "description": "size of page",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "description": "request for filtering data",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucess",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "description": "No records.",
                        "schema": {
                            "$ref": "#/definitions/UserNotFound"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "loginResponse": {
            "type": "object",
            "required": [
                "id",
                "fullName",
                "userName",
                "emailId",
                "contactNumber"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "contactNumber": {
                    "type": "string"
                },
                "emailId": {
                    "type": "string"
                }
            }
        },
        "login": {
            "type": "object",
            "properties": {
                "responseCode": {
                    "type": "integer"
                },
                "responseMessage": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "pin": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/loginResponse"
                }
            }
        },
        "Success": {
            "type": "object",
            "properties": {
                "responseCode": {
                    "type": "integer"
                },
                "responseMessage": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "pin": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/loginResponse"
                }
            }
        },
        "PassNotMatch": {
            "type": "object",
            "properties": {
                "responseCode": {
                    "type": "integer"
                },
                "responseMessage": {
                    "type": "string"
                }
            }
        },
        "fbObj": {
            "type": "object",
            "properties": {
                "fullName": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "_id": {
                    "type": "string"
                }
            }
        },
        "UserExist": {
            "type": "object",
            "properties": {
                "responseCode": {
                    "type": "integer"
                },
                "responseMessage": {
                    "type": "string"
                }
            }
        },
        "UserNotFound": {
            "type": "object",
            "properties": {
                "responseCode": {
                    "type": "integer"
                },
                "responseMessage": {
                    "type": "string"
                }
            }
        },
        "imageUpload": {
            "type": "object",
            "properties": {
                "responseCode": {
                    "type": "integer"
                },
                "responseMessage": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                }
            }
        },
        "fbMap": {
            "type": "object",
            "properties": {
                "responseCode": {
                    "type": "integer"
                },
                "responseMessage": {
                    "type": "string"
                },
                "userProfile": {
                    "$ref": "#/definitions/fbObj"
                }
            }
        }
    }
}
