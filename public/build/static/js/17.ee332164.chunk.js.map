{"version":3,"sources":["Spinner/Spinner.js","views/Dashboard/Dashboard.js"],"names":["Spinner","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","react_overlay_loading_lib_OverlayLoader__WEBPACK_IMPORTED_MODULE_5___default","color","loader","text","active","this","props","loading","backgroundColor","opacity","Component","cardChartData1","getStyle","labels","datasets","label","borderColor","data","cardChartOpts1","tooltips","enabled","custom","CustomTooltips","maintainAspectRatio","legend","display","scales","xAxes","gridLines","zeroLineColor","ticks","fontSize","fontColor","yAxes","min","Math","apply","max","elements","line","borderWidth","point","radius","hitRadius","hoverRadius","Dashboard","_this","Object","_home_codezeros_Documents_current_emojiApp_public_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_codezeros_Documents_current_emojiApp_public_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_codezeros_Documents_current_emojiApp_public_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","userCount","male","female","_this2","setState","recordCount","then","res","code","_res$data$data","totalCounts","maleCounts","femalCounts","_this3","react__WEBPACK_IMPORTED_MODULE_5___default","_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_13__","className","reactstrap__WEBPACK_IMPORTED_MODULE_12__","xs","sm","lg","id","isOpen","card1","toggle","caret","style","height","react_chartjs_2__WEBPACK_IMPORTED_MODULE_6__","options","connect","withStyles","root","marginLeft"],"mappings":"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","file":"static/js/17.ee332164.chunk.js","sourcesContent":["import OverlayLoader from 'react-overlay-loading/lib/OverlayLoader'\nimport React, { Component } from 'react';\n\n\nexport default  class Spinner extends Component{\n\n    render() {\n        return (\n            <OverlayLoader\n                color={'red'} // default is white\n                loader=\"ScaleLoader\" // check below for more loaders\n                text=\"Loading... Please wait!\"\n                active={this.props.loading}\n                backgroundColor={'black'} // default is black\n                opacity=\".4\" // default is .9  \n            >\n            </OverlayLoader>\n        )\n    }\n}","import React, { Component, lazy, Suspense } from 'react';\r\nimport { Bar, Line } from 'react-chartjs-2';\r\nimport { recordCount } from '../../action/auth.action'\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core'\r\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\r\nimport { getStyle, hexToRgba } from '@coreui/coreui/dist/js/coreui-utilities'\r\nimport {\r\n  Badge,\r\n  Button,\r\n  ButtonDropdown,\r\n  ButtonGroup,\r\n  ButtonToolbar,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n  Col,\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  Progress,\r\n  Row,\r\n  Table,\r\n} from 'reactstrap';\r\nimport Spinner from '../../Spinner/Spinner'\r\nimport { red } from '@material-ui/core/colors';\r\n// import OverlayLoader from 'react-overlay-loading/lib/OverlayLoader'\r\n\r\nconst styles = {\r\n  root: {\r\n    marginLeft: '70px'\r\n  }\r\n\r\n}\r\n\r\n// const Widget03 = lazy(() => import('../../views/Widgets/Widget03'));\r\n\r\nconst brandPrimary = getStyle('--primary')\r\nconst brandSuccess = getStyle('--success')\r\nconst brandInfo = getStyle('--info')\r\nconst brandWarning = getStyle('--warning')\r\nconst brandDanger = getStyle('--danger')\r\n\r\nconst cardChartData1 = {\r\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n  datasets: [\r\n    {\r\n      label: 'users',\r\n      backgroundColor: '#e44242',\r\n      borderColor: 'WHITE',\r\n\r\n      data: [65, 59, 84, 84, 51, 55, 40],\r\n    },\r\n  ],\r\n};\r\nconst cardChartOpts1 = {\r\n  tooltips: {\r\n    enabled: false,\r\n    custom: CustomTooltips\r\n  },\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          color: 'transparent',\r\n          zeroLineColor: 'transparent',\r\n        },\r\n        ticks: {\r\n          fontSize: 2,\r\n          fontColor: 'transparent',\r\n        },\r\n\r\n      }],\r\n    yAxes: [\r\n      {\r\n        display: false,\r\n        ticks: {\r\n          display: false,\r\n          min: Math.min.apply(Math, cardChartData1.datasets[0].data) - 5,\r\n          max: Math.max.apply(Math, cardChartData1.datasets[0].data) + 5,\r\n        },\r\n      }],\r\n  },\r\n  elements: {\r\n    line: {\r\n      borderWidth: 1,\r\n    },\r\n    point: {\r\n      radius: 4,\r\n      hitRadius: 10,\r\n      hoverRadius: 4,\r\n    },\r\n  }\r\n}\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userCount: 0,\r\n      male: 0,\r\n      female: 0,\r\n      loading:false\r\n    };\r\n  }\r\n  \r\n  componentWillMount() {\r\n    this.setState({loading: true})\r\n    this.props.recordCount(this.state).then(res => {\r\n        if (res.data.code) {\r\n          const {totalCounts, maleCounts, femalCounts} = res.data.data\r\n          this.setState({ userCount: totalCounts, male:maleCounts,female:femalCounts, loading: false})\r\n        } else {\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  // loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return(<Spinner loading={this.state.loading}></Spinner>)\r\n    }\r\n  \r\n    return (\r\n      <div className=\"animated fadeIn \">\r\n        <Row>\r\n          <Col xs=\"12\" sm=\"6\" lg=\"4\">\r\n            <Card className=\"text-white bg-info cardcss\">\r\n              <CardBody className=\"pb-0\">\r\n                <ButtonGroup className=\"float-right\">\r\n                  <ButtonDropdown id='card1' isOpen={this.state.card1} toggle={() => { this.setState({ card1: !this.state.card1 }); }}>\r\n                    <DropdownToggle caret className=\"p-0\" color=\"transparent\">\r\n                      <i className=\"icon-settings\"></i>\r\n                    </DropdownToggle>\r\n                  </ButtonDropdown>\r\n                </ButtonGroup>\r\n                <Row>\r\n                  <Col>\r\n                    <div className=\"text-value\">Users</div>\r\n                    <div>{this.state.userCount}</div>\r\n                  </Col>\r\n                  <Col>\r\n                    <div className=\"text-value\">Male</div>\r\n                    <div>{this.state.male}</div>\r\n                  </Col>\r\n                  <Col>\r\n                    <div className=\"text-value\">Female</div>\r\n                    <div>{this.state.female}</div>\r\n                  </Col>\r\n                </Row>\r\n              </CardBody>\r\n              <div className=\"chart-wrapper mx-3\" style={{ height: '90px' }}>\r\n                <Line data={cardChartData1} options={cardChartOpts1} height={70} />\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n          {/* </Row>\r\n        <Row> */}\r\n          <Col xs=\"12\" sm=\"6\" lg=\"4\">\r\n            <Card className=\"text-white bg-info cardcss\">\r\n              <CardBody className=\"pb-0\">\r\n                <ButtonGroup className=\"float-right\">\r\n                  <ButtonDropdown id='card1' isOpen={this.state.card1} toggle={() => { this.setState({ card1: !this.state.card1 }); }}>\r\n                    <DropdownToggle caret className=\"p-0\" color=\"transparent\">\r\n                      <i className=\"icon-settings\"></i>\r\n                    </DropdownToggle>\r\n                  </ButtonDropdown>\r\n                </ButtonGroup>\r\n                <div className=\"text-value\">Stickers</div>\r\n                <div>coming soon</div>\r\n              </CardBody>\r\n              <div className=\"chart-wrapper mx-3\" style={{ height: '90px' }}>\r\n                <Line data={cardChartData1} options={cardChartOpts1} height={70} />\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs=\"12\" sm=\"6\" lg=\"4\">\r\n            <Card className=\"text-white bg-info cardcss\">\r\n              <CardBody className=\"pb-0\">\r\n                <ButtonGroup className=\"float-right\">\r\n                  <ButtonDropdown id='card1' isOpen={this.state.card1} toggle={() => { this.setState({ card1: !this.state.card1 }); }}>\r\n                    <DropdownToggle caret className=\"p-0\" color=\"transparent\">\r\n                      <i className=\"icon-settings\"></i>\r\n                    </DropdownToggle>\r\n                  </ButtonDropdown>\r\n                </ButtonGroup>\r\n                <div className=\"text-value\">Keyboards</div>\r\n                <div>coming soon</div>\r\n              </CardBody>\r\n              <div className=\"chart-wrapper mx-3\" style={{ height: '90px' }}>\r\n                <Line data={cardChartData1} options={cardChartOpts1} height={70} />\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n          {/* </Row>\r\n        <Row> */}\r\n          <Col xs=\"12\" sm=\"6\" lg=\"4\">\r\n            <Card className=\"text-white bg-info cardcss\">\r\n              <CardBody className=\"pb-0\">\r\n                <ButtonGroup className=\"float-right\">\r\n                  <ButtonDropdown id='card1' isOpen={this.state.card1} toggle={() => { this.setState({ card1: !this.state.card1 }); }}>\r\n                    <DropdownToggle caret className=\"p-0\" color=\"transparent\">\r\n                      <i className=\"icon-settings\"></i>\r\n                    </DropdownToggle>\r\n                  </ButtonDropdown>\r\n                </ButtonGroup>\r\n                <div className=\"text-value\">Categories</div>\r\n                <div>coming soon</div>\r\n              </CardBody>\r\n              <div className=\"chart-wrapper mx-3\" style={{ height: '90px' }}>\r\n                <Line data={cardChartData1} options={cardChartOpts1} height={70} />\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { recordCount})(withStyles(styles)(Dashboard));\r\n\r\n"],"sourceRoot":""}