{"version":3,"sources":["shared/Login/login.js","shared/Login/ForgotPassword.js","views/Pages/Login/ForgotPassword.js","views/Pages/Login/Login.js"],"names":["validation","data","errors","emailId","password","isEmpty","isEmail","isValid","lodash","ForgotPassword","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeValue","e","setState","defineProperty","target","name","value","state","isSubmit","_validateInput","validateInput","onClickLogin","preventDefault","forgotPassword","then","res","code","objectSpread","header","message","setTimeout","isSendMail","bind","assertThisInitialized","_this2","classes","react_default","a","createElement","reactstrap_es","className","onSubmit","color","addonType","type","placeholder","username","onChange","autoComplete","xs","onClick","successCard","concat","successIcon","successTitle","Component","connect","withStyles","fontSize","textAlign","lineHeight","Login","LoginApi","history","push","onChangeToForgotPassword","status","isLogin","Auth","isAuthenticate","md","Pages_Login_ForgotPassword"],"mappings":"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","file":"static/js/6.f83e0df5.chunk.js","sourcesContent":["import { isEmpty, isEmail } from 'validator';\nimport lodash from 'lodash';\n\nconst validation = (data) => {\n\t\n\tlet errors = {};\n\t\n\tlet { emailId, password } = data;\n\n\tif(isEmpty(emailId)) {\n\t\terrors.emailId = \"Please enter email address\";\n\t}\n\t\n\tif(!isEmpty(emailId) && !isEmail(emailId)) {\n\t\terrors.emailId = \"Please enter valid email address\";\n\t}\n\t\n\tif(isEmpty(password)) {\n\t\terrors.password = \"Please Enter Password\";\n\t}\n\n\treturn {\n\t\tisValid: lodash.isEmpty(errors),\n\t\terrors\n\t}\n\n}\n\nexport default validation;","import { isEmpty, isEmail } from 'validator';\nimport lodash from 'lodash';\n\nconst validation = (data) => {\n\t\n\tlet errors = {};\n\t\n\tlet { emailId } = data;\n\n\tif(isEmpty(emailId)) {\n\t\terrors.emailId = \"Please enter email address\";\n\t}\n\t\n\tif(!isEmpty(emailId) && !isEmail(emailId)) {\n\t\terrors.emailId = \"Please enter valid email address\";\n\t}\n\n\treturn {\n\t\tisValid: lodash.isEmpty(errors),\n\t\terrors\n\t}\n\n}\n\nexport default validation;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { forgotPassword } from '../../../action/auth.action';\nimport { Alert, Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\nimport validateInput from '../../../shared/Login/ForgotPassword';\nimport { withStyles } from '@material-ui/styles';\n\nconst styles = {\n    successIcon: {\n        fontSize: '64px !important',\n        color: 'green'\n    },\n    successCard: {\n        textAlign: 'center'\n    },\n    successTitle: {\n        lineHeight: '60px'\n    }\n};\n\nclass ForgotPassword extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      emailId: \"\",\n      errors: {},\n      isValid: false, \n      isSubmit: false,\n      isSendMail: false\n    }\n    \n    this.onChangeValue = this.onChangeValue.bind(this);\n    this.onClickLogin = this.onClickLogin.bind(this);\n  }\n  \n  onChangeValue = (e) => {\n    this.setState({ [e.target.name] : e.target.value }, () => {\n      if(this.state.isSubmit) {\n        this.isValid(this.state);\n      }    \n    });      \n  }\n    \n  isValid = (data) => {\n    let { isValid, errors } = validateInput(data);\n    \n    this.setState({isValid, errors});\n    \n    return isValid;\n  }\n\n  onClickLogin = (e) => {\n    e.preventDefault();\n    // this.props.LoginApi(this.state);\n    this.setState({isSubmit: true});\n    \n    if(this.isValid(this.state)) {\n      this.props.forgotPassword(this.state).then((res) => {\n          if(res.data.code == 400) {\n            this.setState({errors: {...this.state.errors, header: res.data.message}})\n            setTimeout(() => {\n                this.setState({errors: {...this.state.errors, header: \"\"}})\n            }, 4000)\n          } else {\n            this.setState({isValid: false, isSendMail: true});\n          }\n      });\n    }\n  }\n\n  render() {\n    \n    const {errors} = this.state;\n    const {classes} = this.props;\n    \n    return (\n        <Card className=\"p-4\">\n            <CardBody>\n            {!this.state.isSendMail && <Form onSubmit={this.onClickLogin}>\n                <h1>Forgot Your Password?</h1>\n                <p className=\"text-muted\">Enter your email to receive recovery information</p>\n                {this.state.errors.header && <Alert color=\"danger\">\n                    {this.state.errors.header}\n                </Alert>}\n                <InputGroup className=\"mb-3\">\n                <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                        <i className=\"icon-envelope\"></i>\n                    </InputGroupText>\n                </InputGroupAddon>\n                <Input type=\"text\" placeholder=\"Email\" name=\"emailId\" value={this.state.username} onChange={this.onChangeValue} autoComplete=\"username\" />\n                {errors.emailId && <em className=\"has-error\">{errors.emailId}</em>}\n                </InputGroup>\n                <Row>\n                <Col xs=\"6\">\n                    <Button color=\"primary\" className=\"px-4\" onClick={this.onClickLogin}>Send</Button>\n                </Col>\n                <Col xs=\"6\" className=\"text-right\">\n                    <Button color=\"link\" className=\"px-0\" onClick={(e) =>   this.props.onChange(true)}>Back to login</Button>\n                </Col>\n                </Row>\n            </Form>}\n            {this.state.isSendMail && <div className={classes.successCard}>                \n                <i className={`icons font-2xl d-block cui-circle-check ${classes.successIcon}`}></i>\n                <h3 className={classes.successTitle}>Password Reset Email Sent</h3>\n                <p className=\"text-muted\">An email has been sent to your email address, {this.state.emailId}. Follow to direction  in the email to get your password.</p>\n                <Button color=\"primary\" className=\"px-4\" onClick={(e) =>   this.props.onChange(true)}>Done</Button>\n            </div>}\n            </CardBody>\n        </Card>\n    );\n  }\n}\n\nexport default connect(null, {forgotPassword})(withStyles(styles)(ForgotPassword));\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { LoginApi } from '../../../action/auth.action';\nimport { Alert, Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\nimport validateInput from '../../../shared/Login/login';\nimport ForgotPassword from './ForgotPassword';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props)\n    \n    this.state = {\n      emailId: \"\",\n      password: \"\",\n      errors: {},\n      isValid: false, \n      isSubmit: false,\n      isLogin: true\n    }\n\n    this.onChangeValue = this.onChangeValue.bind(this);\n    this.onClickLogin = this.onClickLogin.bind(this);\n    this.onChangeToForgotPassword = this.onChangeToForgotPassword.bind(this);\n  }\n\n  componentDidMount() {    \n    if(this.props.Auth.isAuthenticate) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  onChangeValue = (e) => {\n    \n    this.setState({ [e.target.name] : e.target.value }, () => {\n      if(this.state.isSubmit) {\n        this.isValid(this.state);\n      }    \n    });\n\n  }\n\n  isValid = (data) => {\n    let { isValid, errors } = validateInput(data);\n    \n    this.setState({isValid, errors});\n\n    return isValid;\n  }\n\n  onClickLogin = (e) => {    \n    e.preventDefault();    \n    this.setState({isSubmit: true});\n\n    if(this.isValid(this.state)) {\n      this.props.LoginApi(this.state).then(res => {        \n        if(res.data.code) {\n          this.setState({errors: {...this.state.errors, header: res.data.message}})\n          setTimeout(() => {\n            this.setState({errors: {...this.state.errors, header: \"\"}})\n          }, 4000)\n        } else {\n          this.props.history.push('/dashboard');\n        }\n      }) ;\n      this.setState({isSubmit: false});\n      \n    }\n  }\n  \n  onChangeToForgotPassword = (status) => {\n    this.setState({\n      isLogin: status, \n      emailId: \"\",\n      password: \"\",\n      errors: {},\n      isValid: false, \n      isSubmit: false,\n    })\n  }\n\n  render() {\n    const {errors} = this.state;\n    \n    return (\n      <div className=\"app flex-row align-items-center\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md=\"6\">\n              <CardGroup>\n                {this.state.isLogin && <Card className=\"p-4\">\n                  <CardBody>\n                    <Form onSubmit={this.onClickLogin}>\n                      <h1>Login</h1>\n                      <p className=\"text-muted\">Sign In to your account</p>\n                      {this.state.errors.header && <Alert color=\"danger\">\n                        {this.state.errors.header}\n                      </Alert>}\n                      <InputGroup className=\"mb-3\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"icon-user\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input type=\"text\" placeholder=\"Email Address\" name=\"emailId\" value={this.state.emailId} onChange={this.onChangeValue} autoComplete=\"emailId\" />\n                        {errors.emailId && <em className=\"has-error\">{errors.emailId}</em>}\n                      </InputGroup>\n                      <InputGroup className=\"mb-4\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"icon-lock\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input type=\"password\" placeholder=\"Password\" name=\"password\" value={this.state.password} onChange={this.onChangeValue} autoComplete=\"current-password\" />\n                        {errors.password && <em className=\"has-error\">{errors.password}</em>}\n                      </InputGroup>\n                      <Row>\n                        <Col xs=\"6\">\n                          <Button color=\"primary\" className=\"px-4\" onClick={this.onClickLogin}>Login</Button>\n                        </Col>\n                        <Col xs=\"6\" className=\"text-right\">\n                          <Button color=\"link\" className=\"px-0\" onClick={(e) => this.onChangeToForgotPassword(false)}>Forgot password?</Button>\n                        </Col>\n                      </Row>\n                    </Form>\n                  </CardBody>\n                </Card>}\n                {!this.state.isLogin && <ForgotPassword onChange={this.onChangeToForgotPassword}/>}\n                {/* <Card className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\n                  <CardBody className=\"text-center\">\n                    <div>\n                      <h2>Sign up</h2>\n                      <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut\n                        labore et dolore magna aliqua.</p>\n                      <Link to=\"/register\">\n                        <Button color=\"primary\" className=\"mt-3\" active tabIndex={-1}>Register Now!</Button>\n                      </Link>\n                    </div>\n                  </CardBody>\n                </Card> */}\n              </CardGroup>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  Auth: state.Auth\n})\n\nexport default connect(mapStateToProps, {LoginApi})(Login);\n"],"sourceRoot":""}