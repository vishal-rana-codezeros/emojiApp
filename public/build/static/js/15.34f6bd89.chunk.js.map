{"version":3,"sources":["components/datatable/Datatable.js","components/datatable/Datatablewithfilter.js","components/common/DeleteConfirmDialog.js","views/Users/UsersModal.js","action/user.action.js"],"names":["Datatable","_ref","data","columns","onFetchData","pages","loading","filterable","sortable","react_default","a","createElement","Fragment","react_table_es","manual","state","instance","defaultPageSize","className","Datatablewithfilter","filter","dist_default","serverSide","onTableChange","action","tableState","console","log","search","DeleteConfirmDialog","open","toggle","_this","setState","onClickToDelete","_this$props","props","onClick","deleteId","IconButton_default","aria-label","this","Delete_default","fontSize","reactstrap_es","isOpen","color","React","Component","UsersModal","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChangeToFetchTable","getAllUser","page","pageSize","sorted","filtered","then","res","code","_res$data$data","total","limit","tableData","docs","Math","ceil","onChangeToFilterValue","target","value","datatable_Datatablewithfilter","onChangeToFetchTablefiltere","getAllUserFilter","_res$data$data2","id","someArray","slice","findIndex","x","_id","onClickToEdit","bind","assertThisInitialized","_this2","colorWhite","Header","accessor","width","style","textAlign","d","status","Cell","row","Edit_default","common_DeleteConfirmDialog","_original","xs","lg","fontWeight","type","name","placeholder","onChange","datatable_Datatable","connect","dispatch","axios","get","concat","API","URL","deleteUser"],"mappings":"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","file":"static/js/15.34f6bd89.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactTable from \"react-table\";\r\nimport 'react-table/react-table.css';\r\nimport PropTypes from 'prop-types'; \r\nimport '../../index.css'\r\n\r\nconst Datatable = ({data, columns, onFetchData, pages, loading, filterable, sortable}) => {\r\n  // console.log(\"filter in datatable\",filter)\r\n    return (\r\n        <>\r\n      \r\n        <ReactTable\r\n          // filter={filter}\r\n          columns={columns}\r\n          manual // Forces table not to paginate or sort automatically, so we can handle it server-side\r\n          data={data}\r\n          pages={pages} // Display the total number of pages\r\n          loading={loading} // Display the loading overlay when we need it\r\n          onFetchData={(state, instance) => onFetchData(state, instance)} // Request new data when things change\r\n          filterable={filterable}//filterable\r\n          sortable={sortable}\r\n          defaultPageSize={10}\r\n          className=\"-striped -highlight\"\r\n       \r\n       \r\n        />\r\n      </>\r\n    );\r\n  }\r\n  \r\n\r\n  Datatable.propTypes = {\r\n    onFetchData: PropTypes.func.isRequired\r\n  };\r\n\r\nexport default Datatable;\r\n","import MUIDataTable from \"mui-datatables\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types'; \nconst Datatablewithfilter = ({ data, columns, pages, loading, filterable, sortable, filter, onFetchData }) => {\n  \n  return (\n    <>\n      <MUIDataTable\n        serverSide={true}\n        onTableChange = {(action, tableState) => {console.log(\"\")}}\n        // (action, tableState) => {\n        //   this.xhrRequest('my.api.com/tableData', result => {\n        //     this.setState({ data: result });\n        //   });\n        // }\n        filter={true}\n        search={true}\n        columns={columns}\n        data={data}\n        pages={pages} // Display the total number of pages\n        loading={loading} // Display the loading overlay when we need it\n        // onFetchData={(state, instance) => onFetchData(state, instance)} // Request new data when things change\n        // filterable={filterable}//filterable\n        sortable={sortable}\n        defaultPageSize={10}\n        className=\"-striped -highlight\"\n      />\n    </>\n  )\n}\nDatatablewithfilter.propTypes = {\n  onFetchData: PropTypes.func.isRequired\n};\n\nexport default Datatablewithfilter;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { Component } from 'react';\n// import ReactTable from \"react-table\";\n// import 'react-table/react-table.css';\n// import PropTypes from 'prop-types'; \n// import '../../index.css'\n// import { Badge } from 'reactstrap';\n// import DeleteConfirmDialog from '../../components/common/DeleteConfirmDialog';\n// import IconButton from '@material-ui/core/IconButton';\n// import EditIcon from '@material-ui/icons/Edit';\n// // import JqxDataTable from 'jqwidgets-react/react_jqxdatatable.js';\n\n// import MUIDataTable from \"mui-datatables\";\n\n\n\n// const Datatablewithfilter = ({data, columns, pages, loading, filterable, sortable, filter,onFetchData}) => {\n// console.log(\"datatable with filter called\",filter)\n//     return (\n//         <>\n\n//         <MUIDataTable\n//           filter={filter}\n//           columns={columns}\n//           manual // Forces table not to paginate or sort automatically, so we can handle it server-side\n//           data={data}\n//           onFetchData={(state, instance) => onFetchData(state, instance)}\n//           pages={pages} // Display the total number of pages\n//           loading={loading} // Display the loading overlay when we need i\n//           filterable={filterable}//filterable\n//           sortable={sortable}\n//           defaultPageSize={10}\n//           className=\"-striped -highlight\"\n\n//         />\n//       </>\n//     );\n//   }\n//   Datatablewithfilter.defaultProps={\n//     pages:1,\n//     columns:[{\n//       Header: 'Full Name',\n//       accessor: 'fullName', // String-based value accessors!\n//       width: 300\n//     }, {\n//       Header: 'Email Address',\n//       accessor: 'emailId',    \n//       width: 400\n//     }, {\n//       Header: 'Contact Number',\n//       accessor: 'contactNumber', // Custom value accessors!\n//       width: 300,\n//       style: { textAlign: \"center\" }\n//     }, {\n//       Header: 'Status', // Custom header components!\n//       id: \"status\",\n//       accessor: d => d.status=='ACTIVE'? (<Badge color=\"success\">Active</Badge>):(<Badge color=\"secondary\">Inactive</Badge>),\n//       width: 150,\n//       style: { textAlign: \"center\" }\n//     },\n//     {\n//       Header: \"Action\",\n//       Cell: row => (<>\n//            <IconButton aria-label=\"Delete\">\n//              <EditIcon fontSize=\"small\" /> \n//            </IconButton>\n//            <DeleteConfirmDialog deleteId={row.row._original._id} onClick={this.onClickToDelete}/>\n//         </>),\n//       style: { textAlign: \"center\" }\n//     }\n//   ]\n// }\n\n// Datatablewithfilter.propTypes = {\n//     onFetchData: PropTypes.func.isRequired\n//   };\n\n// export default Datatablewithfilter;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Card, CardBody, CardHeader, Col, Modal, ModalBody, ModalFooter, ModalHeader, Row } from 'reactstrap';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nclass DeleteConfirmDialog extends React.Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({ open: !this.state.open });\r\n  };\r\n\r\n  onClickToDelete = () => {\r\n      const {onClick, deleteId} = this.props;\r\n      \r\n      onClick(deleteId)\r\n      this.setState({ open: !this.state.open });\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <>\r\n        <IconButton aria-label=\"Delete\" onClick={this.toggle}>\r\n          <DeleteIcon fontSize=\"small\" />\r\n        </IconButton>\r\n        <Modal isOpen={this.state.open} toggle={this.toggle} className={this.props.className}>\r\n            <ModalHeader toggle={this.toggle}>Delete User</ModalHeader>\r\n            <ModalBody>\r\n                Are you sure you want to delete this user?\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n                <Button color=\"danger\" onClick={this.onClickToDelete}>Delete</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteConfirmDialog;","import React, { Component } from 'react';\r\nimport { Badge, Card, CardBody, CardHeader, Col, Pagination, PaginationItem, PaginationLink, Row, Table } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getAllUser, deleteUser } from '../../action/user.action';\r\nimport Datatable from '../../components/datatable/Datatable';\r\nimport Datatablewithfilter from '../../components/datatable/Datatablewithfilter';\r\nimport DeleteConfirmDialog from '../../components/common/DeleteConfirmDialog';\r\nimport EditUser from '../../components/common/DeleteConfirmDialog';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n// import Griddle from 'griddle-react';\r\n\r\nclass UsersModal extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      tableData: [],\r\n      pages: 1,\r\n      loading: false,\r\n      filter: ''\r\n    }\r\n\r\n    this.onChangeToFetchTable = this.onChangeToFetchTable.bind(this);\r\n    this.onClickToDelete = this.onClickToDelete.bind(this);\r\n    this.onClickToEdit = this.onClickToEdit.bind(this);\r\n    this.onChangeToFilterValue = this.onChangeToFilterValue.bind(this);\r\n    this.onChangeToFetchTablefiltere = this.onChangeToFetchTablefiltere.bind(this);\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   this.interval = setInterval(() => this.setState({ time: Date.now() }), 1000);\r\n  // }\r\n  // componentWillUnmount() {\r\n  //   clearInterval(this.interval);\r\n  // }\r\n\r\n\r\n  onChangeToFetchTable = (state, instance) => {\r\n    // console.log(\"action, tableState\", action, tableState);\r\n    this.setState({ loading: true })\r\n    this.props.getAllUser(state.page, state.pageSize, state.sorted, state.filtered).then((res) => {\r\n      if (res.data.code == 200) {\r\n        const { total, limit } = res.data.data;\r\n        this.setState({ tableData: res.data.data.docs, pages: Math.ceil(total / limit), loading: false })\r\n        console.log(\"resdata===========================>\", res.data.data.docs)\r\n      }\r\n    })\r\n  }\r\n  onChangeToFilterValue = (data) => {\r\n    this.setState({ filter: data.target.value })\r\n    console.log(\"in changetofilter value\", this.state.filter)\r\n    return (<Datatablewithfilter data={this.state.tableData} onFetchData={this.onChangeToFetchTablefiltere} loading={this.state.loading} filter={this.state.filter} />)\r\n  }\r\n  onChangeToFetchTablefiltere = (state, instance) => {\r\n    console.log(\" in onChangeToFetchTablefiltere\", this.state)\r\n    this.setState({ loading: true })\r\n    this.props.getAllUserFilter(this.state.page, this.state.pageSize, this.state.sorted, this.state.filtered, this.state.filter).then((res) => {\r\n      if (res.data) {\r\n        const { total, limit } = res.data.data;\r\n        this.setState({ tableData: res.data.data.docs, pages: Math.ceil(total / limit), loading: false })\r\n        console.log(\"resdata===========================>\", res.data.data.docs)\r\n      }\r\n    })\r\n  }\r\n\r\n  onClickToDelete = (id) => {\r\n\r\n    console.log(\"id in delete\", id)\r\n    let someArray = this.state.tableData.slice(0, this.state.tableData.findIndex(x => x._id === id))\r\n    console.log(\"someArray\", someArray)\r\n    // this.setState({tableData: someArray});\r\n\r\n  }\r\n  onClickToEdit = (id) => {\r\n    console.log(\"id in delete\", id)\r\n    console.log(\"edit\")\r\n  }\r\n  render() {\r\n    console.log(\"tableData\", this.state.tableData);\r\n    const colorWhite = {\r\n      // color: \"white\"\r\n    }\r\n    const columns = [{\r\n      Header: 'Full Name',\r\n      accessor: 'fullName', // String-based value accessors!\r\n      width: 300,\r\n      style: {}\r\n    }, {\r\n      Header: 'Email Address',\r\n      accessor: 'emailId',\r\n      width: 400,\r\n      style: {}\r\n\r\n    }, {\r\n      Header: 'Contact Number',\r\n      accessor: 'contactNumber', // Custom value accessors!\r\n      width: 300,\r\n      style: { textAlign: \"center\", }\r\n    }, {\r\n      Header: 'Status', // Custom header components!\r\n      id: \"status\",\r\n      accessor: d => d.status == 'ACTIVE' ? (<Badge color=\"success\">Active</Badge>) : (<Badge color=\"secondary\">Inactive</Badge>),\r\n      width: 150,\r\n      style: { textAlign: \"center\", }\r\n    },\r\n    {\r\n      Header: \"Action\",\r\n      Cell: row => (<>\r\n        <IconButton aria-label=\"Delete\" >\r\n          <EditIcon fontSize=\"small\" />\r\n        </IconButton>\r\n        <DeleteConfirmDialog deleteId={row.row._original._id} onClick={this.onClickToDelete} />\r\n        {/* <EditUser deleteId={row.row._original._id} onClick={this.onClickToEdit} /> */}\r\n      </>),\r\n      style: { textAlign: \"center\", }\r\n    }\r\n    ]\r\n\r\n\r\n    const { tableData } = this.state;\r\n\r\n    return (\r\n      <div >\r\n        <Row >\r\n          <Col xs=\"12\" lg=\"12\">\r\n            <Card className=\"tablecss\" >\r\n              <CardHeader className=\"tablecss\" style={{textAlign: 'center', fontSize:'20px',fontWeight:'600'}}>\r\n                 Users List\r\n              </CardHeader>\r\n              <input type=\"text\" className=\"searchcss\" name=\"search\" placeholder=\"Search..\" onChange={this.onChangeToFilterValue} ></input>\r\n\r\n              <CardBody style={colorWhite}>\r\n                <Datatable data={tableData} columns={columns} onFetchData={this.onChangeToFetchTable} pages={this.state.pages} loading={this.state.loading} onChangeToFilterValue={this.onChangeToFilterValue} filter={this.state.filter} style={colorWhite} />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { getAllUser, deleteUser, Datatablewithfilter })(UsersModal);\r\n","import axios from 'axios';\nimport { ACTION_TYPE } from '../reducers/reducer.types';\nimport API from '../config';\n\nconst changeAction = string => ({\n  \ttype : ACTION_TYPE,\n\taction_value: string\n});\n\nexport const getAllUser = (page, pageSize, sorted, filtered) => {\n\tconsole.log(\"getalluser called\")\n    return dispatch => {\n    \treturn axios.get(`${API.URL}/admin/getAllUser?page=${page}&size=${pageSize}`);\n\t}\n\t\n}\n\nexport const getAllUserFilter = (page, pageSize, sorted, filtered,filter) => {\n\tconsole.log(\"withfilterAPI called\")\n    return dispatch => {\n    \treturn axios.get(`${API.URL}/admin/getAllUser?page=${page}&size=${pageSize}&filter=${filter}`);\n\t}\n\t\n}\n\nexport const deleteUser = (page, pageSize, sorted, filtered) => {\n    return dispatch => {\n    \treturn axios.get(`${API.URL}/admin/getAllUser?page=${page}&size=${pageSize}`);\n    }\n}\n\nexport const Login = data => {\n\treturn dispatch => {\n\t\tconsole.log(data);\n\t}\n}\n"],"sourceRoot":""}