{"version":3,"sources":["components/datatable/Datatable.js","components/common/DeleteConfirmDialog.js","views/Users/UsersModal.js","action/user.action.js"],"names":["Datatable","_ref","data","columns","onFetchData","pages","loading","filterable","sortable","react_default","a","createElement","Fragment","react_table_es","manual","state","instance","defaultPageSize","className","DeleteConfirmDialog","open","toggle","_this","setState","onClickToDelete","_this$props","props","onClick","deleteId","IconButton_default","aria-label","this","Delete_default","fontSize","reactstrap_es","isOpen","color","React","Component","UsersModal","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChangeToFetchTable","getAllUser","page","pageSize","sorted","filtered","then","res","code","_res$data$data","total","limit","tableData","docs","Math","ceil","id","someArray","slice","findIndex","x","_id","console","log","bind","assertThisInitialized","_this2","Header","accessor","width","style","textAlign","d","status","Cell","row","Edit_default","common_DeleteConfirmDialog","_original","xs","lg","datatable_Datatable","connect","dispatch","axios","get","concat","API","URL","deleteUser"],"mappings":"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","file":"static/js/13.4a3b0739.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactTable from \"react-table\";\nimport 'react-table/react-table.css';\nimport PropTypes from 'prop-types'; \n\n\nconst Datatable = ({data, columns, onFetchData, pages, loading, filterable, sortable}) => {\n    return (\n        <>\n        <ReactTable\n          columns={columns}\n          manual // Forces table not to paginate or sort automatically, so we can handle it server-side\n          data={data}\n          pages={pages} // Display the total number of pages\n          loading={loading} // Display the loading overlay when we need it\n          onFetchData={(state, instance) => onFetchData(state, instance)} // Request new data when things change\n          filterable={filterable}\n          sortable={sortable}\n          defaultPageSize={10}\n          className=\"-striped -highlight\"\n          // show the loading overlay\n            // this.setState({loading: true})\n            // // fetch your data\n            // Axios.post('mysite.com/data', {\n            //   page: state.page,\n            //   pageSize: state.pageSize,\n            //   sorted: state.sorted,\n            //   filtered: state.filtered\n            // })\n            //   .then((res) => {\n            //     // Update react-table\n            //     this.setState({\n            //       data: res.data.rows,\n            //       pages: res.data.pages,\n            //       loading: false\n            //     })\n            //   })\n        />\n      </>\n    );\n  }\n\n  Datatable.propTypes = {\n    onFetchData: PropTypes.func.isRequired\n  };\n\nexport default Datatable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Card, CardBody, CardHeader, Col, Modal, ModalBody, ModalFooter, ModalHeader, Row } from 'reactstrap';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nclass DeleteConfirmDialog extends React.Component {\n  state = {\n    open: false,\n  };\n\n  toggle = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  onClickToDelete = () => {\n      const {onClick, deleteId} = this.props;\n      \n      onClick(deleteId)\n      this.setState({ open: !this.state.open });\n  }\n  \n  render() {\n    return (\n      <>\n        <IconButton aria-label=\"Delete\" onClick={this.toggle}>\n          <DeleteIcon fontSize=\"small\" />\n        </IconButton>\n        <Modal isOpen={this.state.open} toggle={this.toggle} className={this.props.className}>\n            <ModalHeader toggle={this.toggle}>Delete User</ModalHeader>\n            <ModalBody>\n                Are you sure you want to delete this user?\n            </ModalBody>\n            <ModalFooter>\n                <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n                <Button color=\"danger\" onClick={this.onClickToDelete}>Delete</Button>\n            </ModalFooter>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default DeleteConfirmDialog;","import React, { Component } from 'react';\nimport { Badge, Card, CardBody, CardHeader, Col, Pagination, PaginationItem, PaginationLink, Row, Table } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getAllUser, deleteUser } from '../../action/user.action';\nimport Datatable from '../../components/datatable/Datatable';\nimport DeleteConfirmDialog from '../../components/common/DeleteConfirmDialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\n\n\nclass UsersModal extends Component {\n  constructor(props) {\n    super(props)\n    \n    this.state = {\n      tableData: [],\n      pages: 1,\n      loading: false \n    }\n\n    this.onChangeToFetchTable = this.onChangeToFetchTable.bind(this);\n    this.onClickToDelete = this.onClickToDelete.bind(this);\n  }\n\n  onChangeToFetchTable = (state, instance) => {    \n    this.setState({loading: true})\n    this.props.getAllUser(state.page, state.pageSize, state.sorted, state.filtered).then((res) => {\n      if(res.data.code == 200) {\n        const {total, limit} = res.data.data;\n        this.setState({tableData : res.data.data.docs, pages: Math.ceil(total/limit), loading: false})\n      }\n    })\n  }\n\n  onClickToDelete = (id) => {    \n    // this.props.deleteUser(id)\n    let someArray = this.state.tableData.slice(0, this.state.tableData.findIndex(x => x._id === id))\n    console.log(\"someArray\", someArray)\n    // this.setState({tableData: someArray});\n    \n  }\n  \n  render() {    \n    console.log(\"tableData\", this.state.tableData);\n    const columns = [{\n      Header: 'Full Name',\n      accessor: 'fullName', // String-based value accessors!\n      width: 300\n    }, {\n      Header: 'Email Address',\n      accessor: 'emailId',    \n      width: 400\n    }, {\n      Header: 'Contact Number',\n      accessor: 'contactNumber', // Custom value accessors!\n      width: 300,\n      style: { textAlign: \"center\" }\n    }, {\n      Header: 'Status', // Custom header components!\n      id: \"status\",\n      accessor: d => d.status=='ACTIVE'? (<Badge color=\"success\">Active</Badge>):(<Badge color=\"secondary\">Inactive</Badge>),\n      width: 150,\n      style: { textAlign: \"center\" }\n    },\n    {\n      Header: \"Action\",\n      Cell: row => (<>\n           <IconButton aria-label=\"Delete\">\n             <EditIcon fontSize=\"small\" /> \n           </IconButton>\n           <DeleteConfirmDialog deleteId={row.row._original._id} onClick={this.onClickToDelete}/>\n        </>),\n      style: { textAlign: \"center\" }\n    }\n  ]\n\n\n    const {tableData} = this.state;\n    \n    return (\n      <div>\n        <Row>\n          <Col xs=\"12\" lg=\"12\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> Users List\n              </CardHeader>\n                <CardBody>  \n                  <Datatable data={tableData} columns={columns} onFetchData={this.onChangeToFetchTable} pages={this.state.pages} loading={this.state.loading}/>\n                </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, {getAllUser, deleteUser})(UsersModal);\n","import axios from 'axios';\nimport { ACTION_TYPE } from '../reducers/reducer.types';\nimport API from '../config';\n\nconst changeAction = string => ({\n  \ttype : ACTION_TYPE,\n\taction_value: string\n});\n\nexport const getAllUser = (page, pageSize, sorted, filtered) => {\n    return dispatch => {\n    \treturn axios.get(`${API.URL}/admin/getAllUser?page=${page}&size=${pageSize}`);\n    }\n}\n\nexport const deleteUser = (page, pageSize, sorted, filtered) => {\n    return dispatch => {\n    \treturn axios.get(`${API.URL}/admin/getAllUser?page=${page}&size=${pageSize}`);\n    }\n}\n\nexport const Login = data => {\n\treturn dispatch => {\n\t\tconsole.log(data);\n\t}\n}\n"],"sourceRoot":""}